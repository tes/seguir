[  {    "type": "config",    "url": "Options",    "title": "Options",    "name": "ClientOptions",    "group": "Client",    "version": "1.0.0",    "description": "<p>Default configuration</p> ",    "success": {      "examples": [        {          "title": "HTTP/1.1 200 OK",          "content": "HTTP/1.1 200 OK\n{\n  appid: '12345',\n  appsecret: '12345',\n  host: 'http://seguir.server.com',\n   }",          "type": "json"        }      ]    },    "filename": "client/index.js",    "groupTitle": "Server Side Seguir Client",    "groupDescription": "<p>The Seguir client provides a simple and consistent API for interacting with a seguir server.</p> <p>This can only be used server side, as it uses the appId and appSecret which should never be shared within pure client side code.  This client allows you to provide the 'logged in user' which means that you can effectively create any relationship or item you like (even outside of) an actual true user session - e.g. by system events.</p> "  },  {    "type": "function",    "url": "getFeed(liu,user,start,limit,next)",    "title": "getFeed",    "name": "getFeedForUser",    "group": "Feeds",    "version": "1.0.0",    "description": "<p>Retrieve the aggregated newsfeed for a specific user.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the user to retrieve the feed for</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "start",            "description": "<p>pagination - item to start at</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "limit",            "description": "<p>pagination - number of items to show</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Feeds",    "groupDescription": "<p>This is a collection of methods that allow you to retrieve the newsfeed for a specific user.</p> ",    "success": {      "examples": [        {          "title": "getFeed result",          "content": "getFeed result\n{\n  \"feed\": [\n    {\n      \"like\": \"9b384f5a-e1b4-49e7-b80b-8ba7cf882b95\",\n      \"item\": \"http%3A%2F%2Fgithub.com\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-06-18T11:13:45.333Z\",\n      \"_item\": \"9b384f5a-e1b4-49e7-b80b-8ba7cf882b95\",\n      \"type\": \"like\",\n      \"timeuuid\": \"15c28a74-15ab-11e5-8fdd-37533e1b3be9\",\n      \"date\": \"2015-06-18T11:13:45.333Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isprivate\": false,\n      \"ispersonal\": false,\n      \"fromFollower\": true,\n      \"isLike\": true,\n      \"isPost\": false,\n      \"isFollow\": false,\n      \"isFriend\": false,\n      \"isUsersItem\": false\n    },\n    {\n      \"post\": \"051fb278-0d5c-4305-aa04-9f4cebe1fe41\",\n      \"content\": \"Hello, this is a private post\",\n      \"content_type\": \"text/html\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"posted\": \"2015-06-18T11:13:44.200Z\",\n      \"isprivate\": true,\n      \"ispersonal\": false,\n      \"_item\": \"051fb278-0d5c-4305-aa04-9f4cebe1fe41\",\n      \"type\": \"post\",\n      \"timeuuid\": \"1515a89a-15ab-11e5-9de7-99692db8a24b\",\n      \"date\": \"2015-06-18T11:13:44.200Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"fromFollower\": true,\n      \"isLike\": false,\n      \"isPost\": true,\n      \"isFollow\": false,\n      \"isFriend\": false,\n      \"isUsersItem\": false\n    },\n    {\n      \"post\": \"107a99d8-6dde-4d47-acd4-331799fb2a72\",\n      \"content\": \"Hello, this is a post\",\n      \"content_type\": \"text/html\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"posted\": \"2015-06-18T11:13:44.122Z\",\n      \"isprivate\": false,\n      \"ispersonal\": false,\n      \"_item\": \"107a99d8-6dde-4d47-acd4-331799fb2a72\",\n      \"type\": \"post\",\n      \"timeuuid\": \"1509c1b6-15ab-11e5-8ad3-0e070a62a9bc\",\n      \"date\": \"2015-06-18T11:13:44.122Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"fromFollower\": true,\n      \"isLike\": false,\n      \"isPost\": true,\n      \"isFollow\": false,\n      \"isFriend\": false,\n      \"isUsersItem\": false\n    },\n    {\n      \"follow\": \"9dcf7228-35c9-4dc3-99e5-f2cd7d063175\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_follower\": {\n        \"user\": \"6fdfaea4-e03e-469f-bfc6-bf76ce6f2850\",\n        \"username\": \"ted\",\n        \"altid\": \"3\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-06-18T11:13:43.813Z\",\n      \"isprivate\": false,\n      \"ispersonal\": false,\n      \"_item\": \"9dcf7228-35c9-4dc3-99e5-f2cd7d063175\",\n      \"type\": \"follow\",\n      \"timeuuid\": \"14da9b5c-15ab-11e5-ac1a-5b83b258c8d1\",\n      \"date\": \"2015-06-18T11:13:43.813Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"fromFollower\": true,\n      \"isLike\": false,\n      \"isPost\": false,\n      \"isFollow\": true,\n      \"isFriend\": false,\n      \"isUsersItem\": false\n    },\n    {\n      \"follow\": \"3e86dcb6-a3f8-429f-914b-7eaa7d61fb89\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_follower\": {\n        \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n        \"username\": \"phteven\",\n        \"altid\": \"2\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-06-18T11:13:43.768Z\",\n      \"isprivate\": false,\n      \"ispersonal\": false,\n      \"_item\": \"3e86dcb6-a3f8-429f-914b-7eaa7d61fb89\",\n      \"type\": \"follow\",\n      \"timeuuid\": \"14d3bd89-15ab-11e5-99da-187dd81992ad\",\n      \"date\": \"2015-06-18T11:13:43.768Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"fromFollower\": true,\n      \"isLike\": false,\n      \"isPost\": false,\n      \"isFollow\": true,\n      \"isFriend\": false,\n      \"isUsersItem\": false\n    },\n    {\n      \"friend\": \"85bdb2ce-0a0a-46c2-bc4c-00d7d3ecb5a0\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_friend\": {\n        \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n        \"username\": \"phteven\",\n        \"altid\": \"2\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"since\": \"2015-06-18T11:13:43.437Z\",\n      \"_item\": \"85bdb2ce-0a0a-46c2-bc4c-00d7d3ecb5a0\",\n      \"type\": \"friend\",\n      \"timeuuid\": \"14a13bd1-15ab-11e5-9157-dd5e982cf116\",\n      \"date\": \"2015-06-18T11:13:43.437Z\",\n      \"fromNow\": \"a few seconds ago\",\n      \"isprivate\": true,\n      \"ispersonal\": false,\n      \"fromFollower\": true,\n      \"isLike\": false,\n      \"isPost\": false,\n      \"isFollow\": false,\n      \"isFriend\": true,\n      \"isUsersItem\": false\n    }\n  ],\n  \"more\": null\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getUserFeed(liu,user,start,limit,next)",    "title": "getUserFeed",    "name": "getUserFeedForUser",    "group": "Feeds",    "version": "1.0.0",    "description": "<p>Retrieve the direct newsfeed for a specific user, can be shown on their profile.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the user to retrieve the feed for</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "start",            "description": "<p>pagination - item to start at</p> "          },          {            "group": "Parameter",            "type": "<p>Number</p> ",            "optional": false,            "field": "limit",            "description": "<p>pagination - number of items to show</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Feeds",    "groupDescription": "<p>This is a collection of methods that allow you to retrieve the newsfeed for a specific user.</p> ",    "success": {      "examples": [        {          "title": "getUserFeed result",          "content": "getUserFeed result\n[\n  {\n    \"friend\": \"ff8f9c08-b9e1-4544-bd1c-a30b105d856f\",\n    \"user\": {\n      \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"user_friend\": {\n      \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n      \"username\": \"cliftonc\",\n      \"altid\": \"1\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-06-18T11:13:43.437Z\",\n    \"_item\": \"ff8f9c08-b9e1-4544-bd1c-a30b105d856f\",\n    \"type\": \"friend\",\n    \"timeuuid\": \"14a13bd4-15ab-11e5-b123-1b51513753fc\",\n    \"date\": \"2015-06-18T11:13:43.437Z\",\n    \"fromNow\": \"a few seconds ago\",\n    \"isprivate\": true,\n    \"ispersonal\": false,\n    \"fromFollower\": true,\n    \"isLike\": false,\n    \"isPost\": false,\n    \"isFollow\": false,\n    \"isFriend\": true,\n    \"isUsersItem\": false\n  }\n]",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "followUser(liu,user_to_follow,isprivate,ispersonal,backfill,next)",    "title": "followUser",    "name": "followUser",    "group": "Following",    "version": "1.0.0",    "description": "<p>Follow a user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_to_follow",            "description": "<p>the id of the user to follow</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "isprivate",            "description": "<p>is this visible only to friends</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "ispersonal",            "description": "<p>is this visible only to the user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "backfill",            "description": "<p>amount of time to backfill posts from the followed users direct feed - use moment duration format e.g. '1d'</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Following",    "groupDescription": "<p>This is a collection of methods that allow you to manage follow relationships.</p> ",    "success": {      "examples": [        {          "title": "followUser result",          "content": "followUser result\n{\n  \"follow\": \"3e86dcb6-a3f8-429f-914b-7eaa7d61fb89\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_follower\": {\n    \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"isprivate\": false,\n  \"ispersonal\": false,\n  \"since\": \"2015-06-18T11:13:43.768Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getFollow(liu,follow,next)",    "title": "getFollow",    "name": "getFollow",    "group": "Following",    "version": "1.0.0",    "description": "<p>Retrieve details of a specific follow relationship</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "follow",            "description": "<p>the id of the follow relationship</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Following",    "groupDescription": "<p>This is a collection of methods that allow you to manage follow relationships.</p> ",    "success": {      "examples": [        {          "title": "getFollow result",          "content": "getFollow result\n{\n  \"follow\": \"3e86dcb6-a3f8-429f-914b-7eaa7d61fb89\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_follower\": {\n    \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-06-18T11:13:43.768Z\",\n  \"isprivate\": false,\n  \"ispersonal\": false\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getFollowers(liu,user,next)",    "title": "getFollowers",    "name": "getFollowers",    "group": "Following",    "version": "1.0.0",    "description": "<p>Retrieve a list of followers for a user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the id of user to retrieve followers for</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Following",    "groupDescription": "<p>This is a collection of methods that allow you to manage follow relationships.</p> ",    "success": {      "examples": [        {          "title": "getFollowers result",          "content": "getFollowers result\n[\n  {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"user_follower\": {\n      \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-06-18T11:13:43.768Z\",\n    \"isprivate\": false,\n    \"ispersonal\": false\n  },\n  {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"user_follower\": {\n      \"user\": \"6fdfaea4-e03e-469f-bfc6-bf76ce6f2850\",\n      \"username\": \"ted\",\n      \"altid\": \"3\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-06-18T11:13:43.813Z\",\n    \"isprivate\": false,\n    \"ispersonal\": false\n  }\n]",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "removeFollower(liu,user_follower,next)",    "title": "removeFollower",    "name": "removeFollower",    "group": "Following",    "version": "1.0.0",    "description": "<p>Stop following a user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_follower",            "description": "<p>the id of user to remove as a follower</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Following",    "groupDescription": "<p>This is a collection of methods that allow you to manage follow relationships.</p> ",    "success": {      "examples": [        {          "title": "unFollowUser result",          "content": "unFollowUser result\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "unFollowUser(liu,user_following,next)",    "title": "unFollowUser",    "name": "unFollowUser",    "group": "Following",    "version": "1.0.0",    "description": "<p>Stop following a user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_following",            "description": "<p>the id of follow relationship</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Following",    "groupDescription": "<p>This is a collection of methods that allow you to manage follow relationships.</p> ",    "success": {      "examples": [        {          "title": "unFollowUser result",          "content": "unFollowUser result\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "acceptFriendRequest(liu,friend_request,next)",    "title": "acceptFriendRequest",    "name": "acceptFriendRequest",    "group": "FriendRequests",    "version": "1.0.0",    "description": "<p>Create a friend request with message</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "friend_request",            "description": "<p>the id of friend request to accept</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "FriendRequests",    "groupDescription": "<p>This is a collection of methods that allow you to manage the friend request process.</p> ",    "success": {      "examples": [        {          "title": "acceptFriendRequest result",          "content": "acceptFriendRequest result\n{\n  \"friend\": \"85bdb2ce-0a0a-46c2-bc4c-00d7d3ecb5a0\",\n  \"reciprocal\": \"ff8f9c08-b9e1-4544-bd1c-a30b105d856f\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_friend\": {\n    \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-06-18T11:13:43.437Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "addFriendRequest(liu,user_friend,message,timestamp,next)",    "title": "addFriendRequest",    "name": "addFriendRequest",    "group": "FriendRequests",    "version": "1.0.0",    "description": "<p>Create a friend request with message</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_friend",            "description": "<p>the id of the user to send a friend request to</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "message",            "description": "<p>a message to leave with the request</p> "          },          {            "group": "Parameter",            "type": "<p>Timestamp</p> ",            "optional": false,            "field": "timestamp",            "description": "<p>time to leave the request</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "FriendRequests",    "groupDescription": "<p>This is a collection of methods that allow you to manage the friend request process.</p> ",    "success": {      "examples": [        {          "title": "addFriendRequest result",          "content": "addFriendRequest result\n{\n  \"friend_request\": \"ef74e037-ee69-4c1c-bbf4-1538af08c208\",\n  \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n  \"user_friend\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n  \"message\": \"Please be my friend\",\n  \"since\": \"2015-06-18T11:13:43.352Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getFriendRequests(liu,next)",    "title": "getFriendRequests",    "name": "getFriendRequests",    "group": "FriendRequests",    "version": "1.0.0",    "description": "<p>Retrieve pending friend requests for the current logged in user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "FriendRequests",    "groupDescription": "<p>This is a collection of methods that allow you to manage the friend request process.</p> ",    "success": {      "examples": [        {          "title": "getFriendRequests result",          "content": "getFriendRequests result\n{\n  \"incoming\": [],\n  \"outgoing\": [\n    {\n      \"friend_request\": \"ef74e037-ee69-4c1c-bbf4-1538af08c208\",\n      \"user\": {\n        \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n        \"username\": \"cliftonc\",\n        \"altid\": \"1\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"user_friend\": {\n        \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n        \"username\": \"phteven\",\n        \"altid\": \"2\",\n        \"userdata\": {\n          \"avatar\": \"test.jpg\"\n        }\n      },\n      \"message\": \"Please be my friend\",\n      \"since\": \"2015-06-18T11:13:43.352Z\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getFriend(liu,friend,next)",    "title": "getFriend",    "name": "getFriend",    "group": "Friends",    "version": "1.0.0",    "description": "<p>Get details of a specific friendship</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "friend",            "description": "<p>the id of the friend relationship</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Friends",    "groupDescription": "<p>This is a collection of methods that allow you to manage the friend request process.</p> ",    "success": {      "examples": [        {          "title": "getFriend result",          "content": "getFriend result\n{\n  \"friend\": \"85bdb2ce-0a0a-46c2-bc4c-00d7d3ecb5a0\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"user_friend\": {\n    \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n    \"username\": \"phteven\",\n    \"altid\": \"2\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-06-18T11:13:43.437Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getFriends(liu,user,next)",    "title": "getFriends",    "name": "getFriends",    "group": "Friends",    "version": "1.0.0",    "description": "<p>Retrieve a list of friends for a specific user</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the id of the user to get the list of friends for</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Friends",    "groupDescription": "<p>This is a collection of methods that allow you to manage the friend request process.</p> ",    "success": {      "examples": [        {          "title": "getFriends result",          "content": "getFriends result\n[\n  {\n    \"user_friend\": {\n      \"user\": \"195ac17a-d3e1-4d9c-8e57-a4e51320f632\",\n      \"username\": \"phteven\",\n      \"altid\": \"2\",\n      \"userdata\": {\n        \"avatar\": \"test.jpg\"\n      }\n    },\n    \"since\": \"2015-06-18T11:13:43.437Z\"\n  }\n]",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "removeFriend(liu,user_friend,next)",    "title": "removeFriend",    "name": "removeFriend",    "group": "Friends",    "version": "1.0.0",    "description": "<p>End a friendship</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user_friend",            "description": "<p>the id of the user to stop being friends with</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Friends",    "groupDescription": "<p>This is a collection of methods that allow you to manage the friend request process.</p> ",    "success": {      "examples": [        {          "title": "removeFriend result",          "content": "removeFriend result\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "addLike(liu,item,next)",    "title": "addLike",    "name": "addLike",    "group": "Likes",    "version": "1.0.0",    "description": "<p>Signal that you like a specific URL</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "item",            "description": "<p>the url of the page to like</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to signal that you like a specific URL.</p> ",    "success": {      "examples": [        {          "title": "addLike result",          "content": "addLike result\n{\n  \"like\": \"9b384f5a-e1b4-49e7-b80b-8ba7cf882b95\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"item\": \"http%3A%2F%2Fgithub.com\",\n  \"since\": \"2015-06-18T11:13:45.333Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "checkLike(liu,item,next)",    "title": "checkLike",    "name": "checkLike",    "group": "Likes",    "version": "1.0.0",    "description": "<p>Check if the user likes a specific URL</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "item",            "description": "<p>the url to check if the user likes</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to signal that you like a specific URL.</p> ",    "success": {      "examples": [        {          "title": "checkLike result",          "content": "checkLike result\n{\n  \"like\": \"9b384f5a-e1b4-49e7-b80b-8ba7cf882b95\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-06-18T11:13:45.333Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getLike(liu,like,next)",    "title": "getLike",    "name": "getLike",    "group": "Likes",    "version": "1.0.0",    "description": "<p>Retrieve details of a specific like item by id</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "like",            "description": "<p>the id of the like that you want to retrieve details for</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to signal that you like a specific URL.</p> ",    "success": {      "examples": [        {          "title": "getLike result",          "content": "getLike result\n{\n  \"like\": \"9b384f5a-e1b4-49e7-b80b-8ba7cf882b95\",\n  \"item\": \"http%3A%2F%2Fgithub.com\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"since\": \"2015-06-18T11:13:45.333Z\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "removeLike(liu,item,next)",    "title": "removeLike",    "name": "removeLike",    "group": "Likes",    "version": "1.0.0",    "description": "<p>Check if the user likes a specific URL</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "item",            "description": "<p>the url to remove the like for</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Likes",    "groupDescription": "<p>This is a collection of methods that allow you to signal that you like a specific URL.</p> ",    "success": {      "examples": [        {          "title": "removeLike result",          "content": "removeLike result\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "addPost(liu,content,timestamp,isprivate,ispersonal,next)",    "title": "addPost",    "name": "addPost",    "group": "Posts",    "version": "1.0.0",    "description": "<p>Create a new post on a users news feed</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content",            "description": "<p>the id of the user to follow</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "content_type",            "description": "<p>the content contained in content, use application/json for json data</p> "          },          {            "group": "Parameter",            "type": "<p>Timestamp</p> ",            "optional": false,            "field": "timestamp",            "description": "<p>time to leave the request</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "isprivate",            "description": "<p>is this visible only to friends</p> "          },          {            "group": "Parameter",            "type": "<p>Boolean</p> ",            "optional": false,            "field": "ispersonal",            "description": "<p>is this visible only to the user</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create posts on the logged in users feed.</p> ",    "success": {      "examples": [        {          "title": "addPost result",          "content": "addPost result\n{\n  \"post\": \"ec34ca70-0ecd-4e08-bf03-87219ddbcaa3\",\n  \"user\": {\n    \"user\": \"ca280565-422c-4b49-ad48-54514e8a4bb8\",\n    \"username\": \"new_name\",\n    \"altid\": \"new_altid\",\n    \"userdata\": {\n      \"hello\": \"world\"\n    }\n  },\n  \"content\": {\n    \"hello\": \"world\"\n  },\n  \"content_type\": \"application/json\",\n  \"posted\": \"2015-06-18T11:13:45.185Z\",\n  \"isprivate\": false,\n  \"ispersonal\": false\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getPost(liu,post,next)",    "title": "getPost",    "name": "getPost",    "group": "Posts",    "version": "1.0.0",    "description": "<p>Retrieve details of a specific post</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "post",            "description": "<p>the id of the post to retrieve</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create posts on the logged in users feed.</p> ",    "success": {      "examples": [        {          "title": "getPost result",          "content": "getPost result\n{\n  \"post\": \"107a99d8-6dde-4d47-acd4-331799fb2a72\",\n  \"content\": \"Hello, this is a post\",\n  \"content_type\": \"text/html\",\n  \"user\": {\n    \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n    \"username\": \"cliftonc\",\n    \"altid\": \"1\",\n    \"userdata\": {\n      \"avatar\": \"test.jpg\"\n    }\n  },\n  \"posted\": \"2015-06-18T11:13:44.122Z\",\n  \"isprivate\": false,\n  \"ispersonal\": false\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "removePost(liu,post,next)",    "title": "removePost",    "name": "removePost",    "group": "Posts",    "version": "1.0.0",    "description": "<p>Remove a specific post from your newsfeed</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "post",            "description": "<p>the id of the post to remove</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Posts",    "groupDescription": "<p>This is a collection of methods that allow you to create posts on the logged in users feed.</p> ",    "success": {      "examples": [        {          "title": "removePost result",          "content": "removePost result\n{\n  \"status\": \"removed\"\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "addUser(liu,username,altid,userdata,next)",    "title": "addUser",    "name": "addUser",    "group": "Users",    "version": "1.0.0",    "description": "<p>Creates a new user.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user [not used]</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>the username</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>the local / alternate id</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "userdata",            "description": "<p>arbitrary user data (one level of key values only)</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "initialise",            "description": "<p>optional data structure that allows you to initialise a user in seguir</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      },      "examples": [        {          "title": "userdata-example",          "content": "{\n  avatar: '/image/1.jpg',\n  fullName: 'Clifton Cunningham'\n}",          "type": "json"        },        {          "title": "initialise-example",          "content": "{\n  follow: {\n    users: ['bob', 'cliftonc'],\n    backfill: '1d',\n    isprivate: false,\n    ispersonal: true\n  }\n}",          "type": "json"        }      ]    },    "filename": "client/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "addUser result",          "content": "addUser result\n{\n  \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getUser(liu,user,next)",    "title": "getUser",    "name": "getUser",    "group": "Users",    "version": "1.0.0",    "description": "<p>Retrieve a users details by seguir ID</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the id of the user</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "getUser result",          "content": "getUser result\n{\n  \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getUserByAltId(liu,altid,next)",    "title": "getUserByAltId",    "name": "getUserByAltId",    "group": "Users",    "version": "1.0.0",    "description": "<p>Retrieve a user details by alternate id</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>the altid of the user</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "getUserByAltId result",          "content": "getUserByAltId result\n{\n  \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getUserByName(liu,username,next)",    "title": "getUserByName",    "name": "getUserByName",    "group": "Users",    "version": "1.0.0",    "description": "<p>Retrieve a users details by username</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>the username of the user</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "getUserByName result",          "content": "getUserByName result\n{\n  \"user\": \"861a20da-0d39-4d42-9020-4b12a8a0b329\",\n  \"username\": \"cliftonc\",\n  \"altid\": \"1\",\n  \"userdata\": {\n    \"avatar\": \"test.jpg\"\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "getUserRelationship(liu,user,next)",    "title": "getUserRelationship",    "name": "getUserRelationship",    "group": "Users",    "version": "1.0.0",    "description": "<p>Get details of a relationship between two users</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "user",            "description": "<p>the id of the user</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "getUserRelationship result",          "content": "getUserRelationship result\n{\n  \"isFriend\": true,\n  \"isFriendSince\": \"2015-06-18T11:13:43.437Z\",\n  \"isFriendRequestPending\": false,\n  \"isFriendRequestSince\": null,\n  \"youFollow\": false,\n  \"youFollowSince\": null,\n  \"youFollowPrivate\": false,\n  \"youFollowPersonal\": false,\n  \"theyFollow\": true,\n  \"theyFollowSince\": \"2015-06-18T11:13:43.768Z\",\n  \"theyFollowPrivate\": false,\n  \"theyFollowPersonal\": false,\n  \"inCommon\": []\n}",          "type": "json"        }      ]    }  },  {    "type": "function",    "url": "updateUser(liu,username,altid,userdata,next)",    "title": "updateUser",    "name": "updateUser",    "group": "Users",    "version": "1.0.0",    "description": "<p>Updates an existing user.</p> ",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "liu",            "description": "<p>the id of the current logged in user [not used]</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "username",            "description": "<p>the username</p> "          },          {            "group": "Parameter",            "type": "<p>String</p> ",            "optional": false,            "field": "altid",            "description": "<p>the local / alternate id</p> "          },          {            "group": "Parameter",            "type": "<p>Object</p> ",            "optional": false,            "field": "userdata",            "description": "<p>arbitrary user data (one level of key values only)</p> "          },          {            "group": "Parameter",            "type": "<p>Function</p> ",            "optional": false,            "field": "next",            "description": "<p>callback</p> "          }        ]      }    },    "filename": "client/index.js",    "groupTitle": "Users",    "groupDescription": "<p>This is a collection of methods that allow you to create and retrieve users.</p> ",    "success": {      "examples": [        {          "title": "updateUser result",          "content": "updateUser result\n{\n  \"user\": \"ca280565-422c-4b49-ad48-54514e8a4bb8\",\n  \"username\": \"new_name\",\n  \"altid\": \"new_altid\",\n  \"userdata\": {\n    \"hello\": \"world\"\n  }\n}",          "type": "json"        }      ]    }  }]